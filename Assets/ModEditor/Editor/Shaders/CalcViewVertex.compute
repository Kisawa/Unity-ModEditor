#pragma kernel CalcVertexsWithScreenScope
#pragma kernel WriteVertexColorUseSelectData

float4x4 _MVP;
float3 _MouseTexcoord;
float _Size;
float4 _Color;
StructuredBuffer<float3> _Vertexs;
RWStructuredBuffer<float> RW_Selects;
RWStructuredBuffer<float4> RW_Colors;

[numthreads(1024,1,1)]
void CalcVertexsWithScreenScope(uint3 id : SV_DispatchThreadID)
{
	float4 clipPos = mul(_MVP, float4(_Vertexs[id.x], 1.0));
	float2 screenPos = (clipPos.xy + clipPos.w) * 0.5;
	float2 uv = screenPos / clipPos.w;
	uv.x *= _MouseTexcoord.z;
	_MouseTexcoord.x *= _MouseTexcoord.z;
	float dis = length(uv - _MouseTexcoord.xy);
	float res = 1 - step(_Size, dis);
	RW_Selects[id.x] = res;
}

[numthreads(1024, 1, 1)]
void WriteVertexColorUseSelectData(uint3 id: SV_DispatchThreadID)
{
	RW_Colors[id.x] = lerp(RW_Colors[id.x], _Color, RW_Selects[id.x]);
}